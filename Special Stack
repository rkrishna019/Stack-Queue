class GfG{
	public void push(int a,Stack<Integer> s)
	{
	    s.push(a);
	}
	public int pop(Stack<Integer> s)
        {
            int res = 0;
            while(!s.isEmpty()){
                res = s.pop();
            }
            return res;
	}
	public int min(Stack<Integer> s)
        {
          int min = Integer.MAX_VALUE;
          while(!s.isEmpty()){
              min = Math.min(min,s.peek());
              s.pop();
          }
          return min;
	}
	public boolean isFull(Stack<Integer>s, int n)
        {
          if(s.size()==n){
              return true;
          }
          else{
              return false;
          }
	}
	public boolean isEmpty(Stack<Integer>s)
        {
           if(s.size() == 0){
               return true;
           }
           else{
               return false;
           }
	}
}
